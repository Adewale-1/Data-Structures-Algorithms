


Static array
Methods



asList():
returns a fixed size list backed by the specified array
    int intArr[] = {1,2,3,4,5,6,7,8};
    System.out.println(Array.asList(intArr))

    output => [1,2,3,4,5,6,7,8]








binarySearch(array, x):
Seaches for a value in the specified sorted array
    int intArr[] = {1,2,3,4,19,6,21,8};
    Array.sort(intArr);

    System.out.println(Array.binarySearch(intArr, 3));


compare( array 1, array 2):
Compare two arrays lexicographically





copyOf(originalArray, newLength):
Copies the specified array, truncating or padding with the default value so the copy has the specified length

    int intArr[] = { 10, 20, 15, 22, 35 };
    System.out.println("Integer Array: "
                           + Arrays.toString(
                                 Arrays.copyOf(intArr, 10)));
                              
    output => Integer Array: [10, 20, 15, 22, 35, 0, 0, 0, 0, 0]  






copyOf(originalArray, fromIndex, endIndex):

    int intArr[] = { 10, 20, 15, 22, 35 };

    System.out.println("Integer Array: "
                           + Arrays.toString(
                                 Arrays.copyOfRange(intArr, 1, 3)));
                            
    output => Integer Array: [20, 15]






deepToString(array):
Returns a string representation of the "deep contents" of the specified array



equals(array1, array2):
Checks if both the arrays are equal or not.






mismatch(array1, array2):
Finds and return the index of the first unmatched element between the two specified arrays.
    int intArr[] = { 10, 20, 15, 22, 35 };
  

    int intArr1[] = { 10, 20, 15 ,5};
  
    // To compare both arrays
    System.out.println("The element mismatched at index: " + Arrays.mismatch(intArr, intArr1));
                            
    output => The element mismatched at index: 3


sort(originalArray):
Sort the complete array in ascending order.

    int intArr[] = { 10, 20, 15, 22, 35 };
    Arrays.sort(intArr);
    System.out.println("Integer Array: "
                           + Arrays.toString(intArr));

    output => Integer Array: [10, 15, 20, 22, 35]






sort(originalArray,formIndex,endIndex):
Sort the specified range of array in ascending order  from a start index to a end index - 1.
    // Get the Array
    int intArr[] = { 10, 15, 2, 1, 35 };
  
    // To sort the array using normal sort
    Arrays.sort(intArr, 1, 3);
  
    System.out.println("Integer Array: "
                +Arrays.toString(intArr));
    
    output => Integer Array: [10, 2, 15, 1, 35]





toString(originalArray):
It returns a string representation of the contents of this array. Elements are converted to strings by String.valueOf() function.
    int intArr[] = { 10, 20, 15, 22, 35 };
  
    // To print the elements in one line
    System.out.println("Integer Array: "
                           + Arrays.toString(intArr));

    output => Integer Array: [10, 20, 15, 22, 35]